<?xml version="1.0" encoding="UTF-8" ?>
<launch>
    <arg name="cloud" default="scan_filtered"/>
    <arg name="points_min_dist" default="0.125"/>
    <arg name="icp" default="point_to_plane"/>
    <arg name="cmd_vel" default="cmd_vel"
         doc="Name of the topic on which the planner publishes the velocity commands"/>

    <node name="os_points_throttle" pkg="topic_tools" type="throttle"
          args="messages $(arg cloud) 0.5 $(arg cloud)_slow"
          respawn="true" respawn_delay="1.0" output="log"/>

    <node name="os_points_voxels" pkg="nodelet" type="nodelet" args="standalone pcl/VoxelGrid" output="screen">
        <rosparam subst_value="true">
            leaf_size: $(arg points_min_dist)
            filter_field_name: ""
        </rosparam>
        <remap from="~input" to="$(arg cloud)_slow"/>
        <remap from="~output" to="$(arg cloud)_slow_filtered"/>
    </node>

    <node name="dynamic_mapper" type="dynamic_mapper" pkg="ethzasl_icp_mapper" output="log">
        <param name="subscribe_scan" value="false"/>
        <param name="inputFiltersConfig" value="$(dirname)/dynamic_mapper/input_filters.yaml"/>
        <param if="$(eval icp == 'point_to_plane')"
               name="icpConfig" value="$(dirname)/dynamic_mapper/icp.yaml"/>
        <param if="$(eval icp == 'point_to_plane_4dof')"
               name="icpConfig" value="$(dirname)/dynamic_mapper/icp_4dof.yaml"/>
        <param name="mapPostFiltersConfig" value="$(dirname)/dynamic_mapper/map_post_filters.yaml"/>

        <param name="odom_frame" value="odom"/>
        <param name="map_frame" value="map"/>
        <param name="useROSLogger" value="true"/>
        <param name="minOverlap" value="0.2" />
        <param name="maxOverlapToMerge" value="1.0"/>
        <param name="minReadingPointCount" value="500"/>
        <param name="minMapPointCount" value="500"/>
        <param name="localizing" value="true"/>
        <param name="mapping" value="true"/>
        <!-- Disable refreshing map-to-odom transform. -->
        <param name="tfRefreshPeriod" value="0."/>
        <!-- Parameters for dynamic elements -->
        <param name="priorStatic" value="0.7"/>
        <param name="priorDyn" value="0.3"/>
        <param name="maxAngle" value="0.02"/>
        <param name="eps_a" value="0.1"/>  <!--1 deg = 0.017rad-->
        <param name="eps_d" value="0.1"/>
        <param name="alpha" value="0.99"/>
        <param name="beta" value="0.9"/>
        <param name="maxDyn" value="0.50"/>
        <param name="maxDistNewPoint" value="$(arg points_min_dist)"/>  <!-- 0.07 -->
        <param name="sensorMaxRange" value="50.0"/>

        <remap from="cloud_in" to="$(arg cloud)_slow_filtered"/>
    </node>

    <node name="naex_planner" pkg="naex" type="planner"
          respawn="true" respawn_delay="1.0" output="screen">
        <!--
             5 0.087
            10 0.175
            15 0.262
            20 0.349
            25 0.436
            30 0.524
            35 0.611
            40 0.698
            45 0.785
        -->
        <rosparam subst_value="true">
            position_name: x
            normal_name: normal_x
            map_frame: map
            robot_frame: base_link
            max_cloud_age: 5.0
            max_pitch: 0.175
            max_roll: 0.175
            neighborhood_knn: 32
            neighborhood_radius: 0.6
            normal_radius: 0.5

            max_nn_height_diff: 0.15
            <!--
            X1
            clearance_radius: 0.6
            clearance_low: 0.1
            clearance_high: 0.7
            X2
            clearance_radius: 0.5
            clearance_low: 0.1
            clearance_high: 0.5
            -->
            clearance_radius: 0.6
            clearance_low: 0.1
            clearance_high: 0.7
            min_points_obstacle: 1
            max_ground_diff_std: 0.06
            max_ground_abs_diff_mean: 0.06
            edge_min_centroid_offset: 0.4
            min_dist_to_obstacle: 0.0

            viewpoints_update_freq: 1.
            min_vp_distance: 1.
            max_vp_distance: 5.
            self_factor: 0.5
            planning_freq: 0.5

            min_num_empty: 4
            min_empty_ratio: 2.0

            points_min_dist: $(arg points_min_dist)
            filter_robots: true

            num_input_clouds: 1
            input_queue_size: 15
        </rosparam>

        <remap from="cloud" to="~cloud"/>
        <remap from="input_cloud_0" to="$(arg cloud)_slow"/>
        <remap from="map" to="planner_map"/>
    </node>

    <node name="path_follower" pkg="naex" type="path_follower"
          respawn="true" respawn_delay="1.0" output="screen">
        <rosparam subst_value="true">
            map_frame: map
            odom_frame: odom
            robot_frame: base_link
            control_freq: 10.0
            goal_reached_dist: 0.6
            goal_reached_angle: .inf
            use_path_theta: none
            max_age: 1.0
            <!--
            Max. path distances, tail is consumed first by reached goals.
            A higher value is used in the beginning to traverse across
            unobserved area around robot.
            -->
            max_path_dist: [0.8, 2.5, 2.5, 2.5]
            look_ahead: 0.8
<!--            max_speed: 1.0-->
            max_speed: 0.1
            max_force_through_speed: 0.05
<!--            max_angular_rate: 1.5-->
            max_angular_rate: 0.25
            keep_path: 5.
            keep_cloud_box: [[-3.0, 3.0], [-3.0, 3.0], [-2.0, 2.0]]
            <!--
            X1
            clearance_box: [[-0.6, 0.6], [-0.45, 0.45], [0.2, 0.7]]
            X2
            clearance_box: [[-0.4, 0.4], [-0.3, 0.3], [0.15, 0.5]]
            -->
            clearance_box: [[-0.6, 0.6], [-0.45, 0.45], [0.1, 0.7]]
            show_clearance_pos: [-2, 2]
            min_points_obstacle: 3
            force_through_after: 60.0
            backtrack_after: 120.0
            allow_backward: True
        </rosparam>
        <remap from="cloud" to="$(arg cloud)_slow_filtered"/>
        <remap from="path" to="path"/>
        <remap from="clearance" to="clearance"/>
        <remap from="cmd_vel" to="$(arg cmd_vel)"/>
    </node>
</launch>
