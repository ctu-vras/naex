<?xml version="1.0" encoding="UTF-8" ?>
<launch>
    <arg name="robot" default="X1"/>
    <arg name="robot_type" default="x1"/>
    <arg name="mode" default="none" doc="Recording mode, from {none, input, output, both}."/>

    <node name="throttle_local_map" pkg="topic_tools" type="throttle"
          args="messages local_map 0.1 local_map_slow"
          respawn="true" respawn_delay="1.0" output="log"/>

    <!-- Compress point clouds -->
    <group if="$(eval mode in ['input', 'both'])">
    <rosparam>
        points:
          draco:
            encode_speed: 7
            decode_speed: 7
            encode_method: 1
            deduplicate: true
            force_quantization: true

            quantization_POSITION: 13
            quantization_NORMAL: 4
            quantization_COLOR: 4
            quantization_TEX_COORD: 8
            quantization_GENERIC: 8

            expert_attribute_types: false
            expert_quantization: false
    </rosparam>
    <node name="points_draco" pkg="point_cloud_transport" type="republish"
          args="raw in:=points draco out:=points"
          respawn="true" respawn_delay="1.0" output="log"/>
    </group>

    <group if="$(eval mode in ['output', 'both'])">
    <rosparam>
        points_slow:
          draco:
            encode_speed: 7
            decode_speed: 7
            encode_method: 1
            deduplicate: true
            force_quantization: true

            quantization_POSITION: 13
            quantization_NORMAL: 4
            quantization_COLOR: 4
            quantization_TEX_COORD: 8
            quantization_GENERIC: 8

            expert_attribute_types: false
            expert_quantization: false
    </rosparam>
    <node name="points_slow_draco" pkg="point_cloud_transport" type="republish"
          args="raw in:=points_slow draco out:=points_slow"
          respawn="true" respawn_delay="1.0" output="log"/>

    <rosparam>
        points_slow_filtered:
          draco:
            encode_speed: 7
            decode_speed: 7
            encode_method: 1
            deduplicate: true
            force_quantization: true

            quantization_POSITION: 13
            quantization_NORMAL: 4
            quantization_COLOR: 4
            quantization_TEX_COORD: 8
            quantization_GENERIC: 8

            expert_attribute_types: false
            expert_quantization: false
    </rosparam>
    <node name="points_slow_filtered_draco" pkg="point_cloud_transport" type="republish"
          args="raw in:=points_slow_filtered draco out:=points_slow_filtered"
          respawn="true" respawn_delay="1.0" output="log"/>

    <rosparam>
        local_map_slow:
          draco:
            encode_speed: 7
            decode_speed: 7
            encode_method: 1
            deduplicate: true
            force_quantization: true

            quantization_POSITION: 13
            quantization_NORMAL: 4
            quantization_COLOR: 4
            quantization_TEX_COORD: 8
            quantization_GENERIC: 8

            expert_attribute_types: false
            expert_quantization: false
    </rosparam>
    <node name="local_map_slow_draco" pkg="point_cloud_transport" type="republish"
          args="raw in:=local_map_slow draco out:=local_map_slow"
          respawn="true" respawn_delay="1.0" output="log"/>

    <rosparam>
        updated_map:
          draco:
            encode_speed: 7
            decode_speed: 7
            encode_method: 1
            deduplicate: true
            force_quantization: true

            quantization_POSITION: 13
            quantization_NORMAL: 4
            quantization_COLOR: 4
            quantization_TEX_COORD: 8
            quantization_GENERIC: 8

            expert_attribute_types: false
            expert_quantization: false
    </rosparam>
    <node name="updated_map_draco" pkg="point_cloud_transport" type="republish"
          args="raw in:=updated_map draco out:=updated_map"
          respawn="true" respawn_delay="1.0" output="log"/>
    </group>

    <!-- Record -->
    <arg name="input_topics"
         value="/$(arg robot)/points/draco
                /tf
                /tf_static"/>

    <arg name="output_topics"
         value="/$(arg robot)/points_slow/draco
                /$(arg robot)/points_slow_filtered/draco
                /$(arg robot)/local_map_slow/draco
                /$(arg robot)/updated_map/draco
                /$(arg robot)/path
                /$(arg robot)/control_path
                /$(arg robot)/cmd_vel"/>

    <node if="$(eval mode in {'input', 'both'})"
          name="record_naex_input" pkg="rosbag" type="record"
          args="--lz4 -o $(find naex)/$(arg robot_type)_input $(arg input_topics)"/>
    <node if="$(eval mode in {'output', 'both'})"
          name="record_naex_output" pkg="rosbag" type="record"
          args="--lz4 -o $(find naex)/$(arg robot_type)_output $(arg output_topics)"/>

</launch>
